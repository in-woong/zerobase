{"ast":null,"code":"var _jsxFileName = \"/Users/woong/Documents/Zerobase/zerobase/lecture/react/example/my-app_CRA/src/components/TemperatureInput.js\";\nimport React, { useState } from \"react\";\nimport BoilingVerdict from \"./BoilingVerdict\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst scaleNames = {\n  c: \"Celsius\",\n  // 섭씨\n  f: \"Fahrenheit\" // 화씨\n\n};\nexport default function TemperatureInput(props) {\n  function handleChange(e) {\n    // setTemperature(e.target.value);\n    props.onTemperatureChange({\n      scale: props.scale,\n      temperature: e.target.value\n    });\n  }\n\n  const scale = scaleNames[props.scale];\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      children: [\"Enter temperature in \", scale, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: props.temperature,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BoilingVerdict, {\n      scale: props.scale,\n      temperature: parseFloat(props.temperature)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n_c = TemperatureInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TemperatureInput\");","map":{"version":3,"names":["React","useState","BoilingVerdict","scaleNames","c","f","TemperatureInput","props","handleChange","e","onTemperatureChange","scale","temperature","target","value","parseFloat"],"sources":["/Users/woong/Documents/Zerobase/zerobase/lecture/react/example/my-app_CRA/src/components/TemperatureInput.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport BoilingVerdict from \"./BoilingVerdict\";\n\nconst scaleNames = {\n  c: \"Celsius\", // 섭씨\n  f: \"Fahrenheit\", // 화씨\n};\n\nexport default function TemperatureInput(props) {\n\n  function handleChange(e) {\n    // setTemperature(e.target.value);\n    props.onTemperatureChange({scale:props.scale, temperature:e.target.value})\n  }\n\n  const scale = scaleNames[props.scale];\n\n  return (\n    <fieldset>\n      <legend>Enter temperature in {scale}:</legend>\n      <input value={props.temperature} onChange={handleChange} />\n      <BoilingVerdict\n        scale={props.scale}\n        temperature={parseFloat(props.temperature)}\n      />\n    </fieldset>\n  );\n}"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,UAAU,GAAG;EACjBC,CAAC,EAAE,SADc;EACH;EACdC,CAAC,EAAE,YAFc,CAEA;;AAFA,CAAnB;AAKA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;EAE9C,SAASC,YAAT,CAAsBC,CAAtB,EAAyB;IACvB;IACAF,KAAK,CAACG,mBAAN,CAA0B;MAACC,KAAK,EAACJ,KAAK,CAACI,KAAb;MAAoBC,WAAW,EAACH,CAAC,CAACI,MAAF,CAASC;IAAzC,CAA1B;EACD;;EAED,MAAMH,KAAK,GAAGR,UAAU,CAACI,KAAK,CAACI,KAAP,CAAxB;EAEA,oBACE;IAAA,wBACE;MAAA,oCAA8BA,KAA9B;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,KAAK,EAAEJ,KAAK,CAACK,WAApB;MAAiC,QAAQ,EAAEJ;IAA3C;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,cAAD;MACE,KAAK,EAAED,KAAK,CAACI,KADf;MAEE,WAAW,EAAEI,UAAU,CAACR,KAAK,CAACK,WAAP;IAFzB;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;KAnBuBN,gB"},"metadata":{},"sourceType":"module"}