{"ast":null,"code":"var _jsxFileName = \"/Users/woong/Documents/Zerobase/zerobase/lecture/react/example/my-app_CRA/src/components/Calculator.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport BoilingVerdict from './BoilingVerdict';\nimport TemperatureInput from './TemperatureInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Calculator() {\n  _s();\n\n  const [state, setState] = useState({\n    scale: 'c',\n    temperature: 0\n  });\n\n  const handleTemperatureChange = obj => {\n    setState({ ...state,\n      scale: obj.scale,\n      temperature: obj.temperature\n    });\n  };\n\n  const toCelsius = fahrenheit => {\n    return (fahrenheit - 32) * 5 / 9;\n  };\n\n  const toFahrenheit = celsius => {\n    return celsius * 9 / 5 + 32;\n  };\n\n  const tryConvert = (temperature, convert) => {\n    const input = parseFloat(temperature);\n\n    if (Number.isNaN(input)) {\n      return '';\n    }\n\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n  };\n\n  const {\n    scale,\n    temperature\n  } = state;\n  const celsius = scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n  const fahrenheit = 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TemperatureInput, {\n      scale: 'c',\n      temperature: temperature,\n      onTemperatureChange: handleTemperatureChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TemperatureInput, {\n      scale: 'f',\n      temperature: temperature,\n      onTemperatureChange: handleTemperatureChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Calculator, \"7tDLizD0+9pXeKkY2rNhZLnfWJs=\");\n\n_c = Calculator;\n\nvar _c;\n\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useState","BoilingVerdict","TemperatureInput","Calculator","state","setState","scale","temperature","handleTemperatureChange","obj","toCelsius","fahrenheit","toFahrenheit","celsius","tryConvert","convert","input","parseFloat","Number","isNaN","output","rounded","Math","round","toString"],"sources":["/Users/woong/Documents/Zerobase/zerobase/lecture/react/example/my-app_CRA/src/components/Calculator.js"],"sourcesContent":["import React, { useState } from 'react';\nimport BoilingVerdict from './BoilingVerdict';\nimport TemperatureInput from './TemperatureInput';\n\nexport default function Calculator() {\n  const [state, setState] = useState({\n    scale: 'c',\n    temperature: 0,\n  });\n\n  const handleTemperatureChange = (obj) => {\n    setState({ ...state, scale: obj.scale, temperature: obj.temperature });\n  };\n  const toCelsius = (fahrenheit) => {\n    return ((fahrenheit - 32) * 5) / 9;\n  };\n  const toFahrenheit = (celsius) => {\n    return (celsius * 9) / 5 + 32;\n  };\n\n  const tryConvert = (temperature, convert) => {\n    const input = parseFloat(temperature);\n    if (Number.isNaN(input)) {\n      return '';\n    }\n    const output = convert(input);\n    const rounded = Math.round(output * 1000) / 1000;\n    return rounded.toString();\n  };\n\n  const { scale, temperature } = state;\n  const celsius =\n    scale === 'f' ? tryConvert(temperature, toCelsius) : temperature;\n  const fahrenheit = 'c' ? tryConvert(temperature, toFahrenheit) : temperature;\n\n  return (\n    <>\n      <TemperatureInput\n        scale={'c'}\n        temperature={temperature}\n        onTemperatureChange={handleTemperatureChange}\n      />\n      <TemperatureInput\n        scale={'f'}\n        temperature={temperature}\n        onTemperatureChange={handleTemperatureChange}\n      />\n    </>\n  );\n}\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,eAAe,SAASC,UAAT,GAAsB;EAAA;;EACnC,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC;IACjCM,KAAK,EAAE,GAD0B;IAEjCC,WAAW,EAAE;EAFoB,CAAD,CAAlC;;EAKA,MAAMC,uBAAuB,GAAIC,GAAD,IAAS;IACvCJ,QAAQ,CAAC,EAAE,GAAGD,KAAL;MAAYE,KAAK,EAAEG,GAAG,CAACH,KAAvB;MAA8BC,WAAW,EAAEE,GAAG,CAACF;IAA/C,CAAD,CAAR;EACD,CAFD;;EAGA,MAAMG,SAAS,GAAIC,UAAD,IAAgB;IAChC,OAAQ,CAACA,UAAU,GAAG,EAAd,IAAoB,CAArB,GAA0B,CAAjC;EACD,CAFD;;EAGA,MAAMC,YAAY,GAAIC,OAAD,IAAa;IAChC,OAAQA,OAAO,GAAG,CAAX,GAAgB,CAAhB,GAAoB,EAA3B;EACD,CAFD;;EAIA,MAAMC,UAAU,GAAG,CAACP,WAAD,EAAcQ,OAAd,KAA0B;IAC3C,MAAMC,KAAK,GAAGC,UAAU,CAACV,WAAD,CAAxB;;IACA,IAAIW,MAAM,CAACC,KAAP,CAAaH,KAAb,CAAJ,EAAyB;MACvB,OAAO,EAAP;IACD;;IACD,MAAMI,MAAM,GAAGL,OAAO,CAACC,KAAD,CAAtB;IACA,MAAMK,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,MAAM,GAAG,IAApB,IAA4B,IAA5C;IACA,OAAOC,OAAO,CAACG,QAAR,EAAP;EACD,CARD;;EAUA,MAAM;IAAElB,KAAF;IAASC;EAAT,IAAyBH,KAA/B;EACA,MAAMS,OAAO,GACXP,KAAK,KAAK,GAAV,GAAgBQ,UAAU,CAACP,WAAD,EAAcG,SAAd,CAA1B,GAAqDH,WADvD;EAEA,MAAMI,UAAU,GAAG,MAAMG,UAAU,CAACP,WAAD,EAAcK,YAAd,CAAhB,GAA8CL,WAAjE;EAEA,oBACE;IAAA,wBACE,QAAC,gBAAD;MACE,KAAK,EAAE,GADT;MAEE,WAAW,EAAEA,WAFf;MAGE,mBAAmB,EAAEC;IAHvB;MAAA;MAAA;MAAA;IAAA,QADF,eAME,QAAC,gBAAD;MACE,KAAK,EAAE,GADT;MAEE,WAAW,EAAED,WAFf;MAGE,mBAAmB,EAAEC;IAHvB;MAAA;MAAA;MAAA;IAAA,QANF;EAAA,gBADF;AAcD;;GA7CuBL,U;;KAAAA,U"},"metadata":{},"sourceType":"module"}