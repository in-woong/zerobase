{"ast":null,"code":"var _jsxFileName = \"/Users/woong/Documents/Zerobase/zerobase/lecture/react/example/my-app_CRA/src/components/TemperatureInput.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport BoilingVerdict from \"./BoilingVerdict\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst scaleNames = {\n  c: \"Celsius\",\n  // 섭씨\n  f: \"Fahrenheit\" // 화씨\n\n};\nexport default function TemperatureInput(props) {\n  _s();\n\n  const [temperature, setTemperature] = useState(0);\n\n  function handleChange(e) {\n    setTemperature(e.target.value);\n  }\n\n  const scale = scaleNames[props.scale];\n  return /*#__PURE__*/_jsxDEV(\"fieldset\", {\n    children: [/*#__PURE__*/_jsxDEV(\"legend\", {\n      children: [\"Enter temperature in \", scale, \":\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      value: temperature,\n      onChange: handleChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BoilingVerdict, {\n      scale: props.scale,\n      temperature: parseFloat(temperature)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TemperatureInput, \"0NMucxJL3gMgY4wlf4wiRKirhRA=\");\n\n_c = TemperatureInput;\n\nvar _c;\n\n$RefreshReg$(_c, \"TemperatureInput\");","map":{"version":3,"names":["React","useState","BoilingVerdict","scaleNames","c","f","TemperatureInput","props","temperature","setTemperature","handleChange","e","target","value","scale","parseFloat"],"sources":["/Users/woong/Documents/Zerobase/zerobase/lecture/react/example/my-app_CRA/src/components/TemperatureInput.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport BoilingVerdict from \"./BoilingVerdict\";\n\nconst scaleNames = {\n  c: \"Celsius\", // 섭씨\n  f: \"Fahrenheit\", // 화씨\n};\n\nexport default function TemperatureInput(props) {\n  const [temperature, setTemperature] = useState(0);\n\n  function handleChange(e) {\n    setTemperature(e.target.value);\n  }\n\n  const scale = scaleNames[props.scale];\n\n  return (\n    <fieldset>\n      <legend>Enter temperature in {scale}:</legend>\n      <input value={temperature} onChange={handleChange} />\n      <BoilingVerdict\n        scale={props.scale}\n        temperature={parseFloat(temperature)}\n      />\n    </fieldset>\n  );\n}"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,UAAU,GAAG;EACjBC,CAAC,EAAE,SADc;EACH;EACdC,CAAC,EAAE,YAFc,CAEA;;AAFA,CAAnB;AAKA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;EAAA;;EAC9C,MAAM,CAACC,WAAD,EAAcC,cAAd,IAAgCR,QAAQ,CAAC,CAAD,CAA9C;;EAEA,SAASS,YAAT,CAAsBC,CAAtB,EAAyB;IACvBF,cAAc,CAACE,CAAC,CAACC,MAAF,CAASC,KAAV,CAAd;EACD;;EAED,MAAMC,KAAK,GAAGX,UAAU,CAACI,KAAK,CAACO,KAAP,CAAxB;EAEA,oBACE;IAAA,wBACE;MAAA,oCAA8BA,KAA9B;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAO,KAAK,EAAEN,WAAd;MAA2B,QAAQ,EAAEE;IAArC;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,cAAD;MACE,KAAK,EAAEH,KAAK,CAACO,KADf;MAEE,WAAW,EAAEC,UAAU,CAACP,WAAD;IAFzB;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GAnBuBF,gB;;KAAAA,gB"},"metadata":{},"sourceType":"module"}